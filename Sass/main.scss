// Color Variables
$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  color: $color-grey-dark;
  padding: 1.6rem;
}

//////////////////////////////////////////////////////

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);

  &__logo-container {
    // same as '.header__logo-container'
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__title-container {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /* fixes shake during animation of child elements*/
  backface-visibility: hidden;

  // same as '.heading-primary--main'
  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    padding: 0 0 3rem 3.5rem;

    animation: moveInLeft 1.5s ease-in-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    padding: 0 0 7rem 1.72rem;

    animation: moveInRight 1.5s ease-in-out;
  }
}

/* keyframes animation */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  70% {
    opacity: 1;
    transform: translateX(1rem);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  70% {
    opacity: 1;
    transform: translateX(-1rem);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes moveInTop {
  0% {
    transform: translateY(4rem);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opactity: 1;
  }
}

.btn {
  &:link,
  &:visited {
    display: inline-block;
    position: relative;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    letter-spacing: 0.1px;
    font-size: 1.6rem;

    transition: all 0.2s; /* have to be on the initial state */
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    // remember same as '.btn--white::after {...}'
    &::after {
      background-color: $color-white;
      border-radius: 10rem;
    }
  }

  &--animated {
    animation: moveInTop 0.5s ease-out 0.75s;

    /* ðŸ‘‡ will automatically apply the values specified in the 'moveIntop' keyframe, before the animation starts. */
    animation-fill-mode: backwards;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    /* '::after' pseudo-element animation as we hover over original btn */
    // same as '.btn:hover::after {...}'
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &::after {
    content: "";
    display: inline-block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    transition: all 0.4s;
  }
}
